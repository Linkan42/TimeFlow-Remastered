name: meeting

on: 
  push:
    branches:
      - main
    paths: 
      - './meeting' 

  workflow_dispatch:
   
jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'meeting' # Sets default path for "run" commands to the test subfolder.
    
    # Sets environment variables with values extracted from GitHub Actions Repository Secrets.
    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY_LOGIN_SERVER: ${{ secrets.CONTAINER_REGISTRY_LOGIN_SERVER }}
      CONTAINER_REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
      CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

    steps:

      # Checks-out repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v4

      # Installs Node.js.
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache-dependency-path: '../meeting/package-lock.json' # Path to package-lock.json  subfolder.
      
      # Builds the Docker image.
      - name: Build
        run: docker build -t $CONTAINER_REGISTRY_LOGIN_SERVER/meeting:$VERSION --file Dockerfile .

      # Publishes the Docker image to the Azure Container Registry.
      - name: Publish
        run: |
          echo $CONTAINER_REGISTRY_PASSWORD | docker login $CONTAINER_REGISTRY_LOGIN_SERVER --username $CONTAINER_REGISTRY_USERNAME --password-stdin
          docker push $CONTAINER_REGISTRY_LOGIN_SERVER/meeting:$VERSION

      # Installs Kubectl and connects it to the Azure Kubernetes Service (AKS) cluster.
      # https://github.com/marketplace/actions/kubernetes-cli-kubectl
      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.24.2
      
      # Expands the manifest YAML file (i.e. replaces placeholders in the YAML file with environment variable values)
      # and deploys the microservice to the Azure Kubernetes Service (AKS) cluster.
      - name: Deploy
        run: envsubst < '../meeting/kubernetes/deploy.yaml | kubectl apply -f